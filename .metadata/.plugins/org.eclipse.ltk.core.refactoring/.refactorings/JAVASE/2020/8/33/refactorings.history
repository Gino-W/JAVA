<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;socket&apos; from expression &apos;new Socket()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;socket&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_TCP.Server.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Socket()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;socket&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_TCP{Server.java" name="socket" replace="true" selection="254 0" stamp="1597020376172" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;socket&apos; from expression &apos;new Socket()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;socket&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_TCP.Client.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Socket()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;socket&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_TCP{Client.java" name="socket" replace="true" selection="194 0" stamp="1597020767624" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;outputStream&apos; from expression &apos;socket.getOutputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;outputStream&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_TCP.Client.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;socket.getOutputStream()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;outputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_TCP{Client.java" name="outputStream" replace="true" selection="437 0" stamp="1597021119846" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;inputStream&apos; from expression &apos;client.getInputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;inputStream&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_TCP.Server.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;client.getInputStream()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;inputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_TCP{Server.java" name="inputStream" replace="true" selection="450 0" stamp="1597021384843" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;ds&apos; from expression &apos;new DatagramSocket()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;ds&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.SendDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new DatagramSocket()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;ds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{SendDemo.java" name="ds" replace="true" selection="260 0" stamp="1597059863065" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;dp&apos; from expression &apos;new DatagramPacket()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;dp&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.SendDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new DatagramPacket()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;dp&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{SendDemo.java" name="dp" replace="true" selection="376 0" stamp="1597059940487" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;buf&apos; from expression &apos;data.getBytes()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;buf&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.SendDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;data.getBytes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;buf&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{SendDemo.java" name="buf" replace="true" selection="402 0" stamp="1597060070613" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;length&apos; from expression &apos;buf.length&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;length&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.SendDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;buf.length&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;length&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{SendDemo.java" name="length" replace="true" selection="430 0" stamp="1597060088950" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;byName&apos; from expression &apos;InetAddress.getByName(&quot;192.168.56.1&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;byName&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.SendDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;InetAddress.getByName(&quot;192.168.56.1&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;byName&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{SendDemo.java" name="byName" replace="true" selection="515 0" stamp="1597060127696" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;ds&apos; from expression &apos;new DatagramSocket()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;ds&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.RicieveDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new DatagramSocket()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;ds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{RicieveDemo.java" name="ds" replace="true" selection="266 0" stamp="1597060288841" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;C_14_UDP.RicieveDemo&apos; to &apos;ReceiveDemo&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Original element: &apos;C_14_UDP.RicieveDemo&apos;&#x0D;&#x0A;- Renamed element: &apos;C_14_UDP.ReceiveDemo&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;RicieveDemo&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;C_14_UDP{RicieveDemo.java[RicieveDemo" matchStrategy="1" name="ReceiveDemo" qualified="false" references="true" similarDeclarations="false" stamp="1597060354989" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;data&apos; from expression &apos;p.getData()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;data&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_UDP.ReceiveDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;p.getData()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;data&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_UDP{ReceiveDemo.java" name="data" replace="true" selection="532 0" stamp="1597060523247" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;openStream&apos; from expression &apos;url.openStream()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;openStream&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_URL.URLDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.openStream()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;openStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_URL{URLDemo.java" name="openStream" replace="true" selection="578 0" stamp="1597063057527" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;openConnection&apos; from expression &apos;url.openConnection()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;openConnection&apos;&#x0D;&#x0A;- Destination method: &apos;C_14_URL.URLDemo.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.openConnection()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;openConnection&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_14_URL{URLDemo.java" name="openConnection" replace="true" selection="665 0" stamp="1597063333864" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz2&apos; from expression &apos;p.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz2&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Class.ClassDemo.testClass()&apos;&#x0D;&#x0A;- Variable expression: &apos;p.getClass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Class{ClassDemo.java" name="clazz2" replace="true" selection="446 0" stamp="1597102154707" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz1&apos; from expression &apos;Class.forName(&quot;C_15_Class.Person&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz1&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;C_15_Class.Person&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="clazz1" replace="true" selection="300 0" stamp="1597107649232" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Person.java&apos; to &apos;JAVASE/src/C_15_Constructor&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Destination element: &apos;JAVASE/src/C_15_Constructor&apos;&#x0D;&#x0A;- Original element: &apos;C_15_Class.Person.java&apos;" description="Copy compilation unit" destination="/src&lt;C_15_Constructor" element1="/src&lt;C_15_Class{Person.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1597107674987" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="newInstance" replace="true" selection="437 0" stamp="1597107776890" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;newInstance2&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance2&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="newInstance2" replace="true" selection="518 0" stamp="1597107870575" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz1&apos; from expression &apos;Class.forName(&quot;C_15_Constructor.Person&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz1&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor2()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;C_15_Constructor.Person&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="clazz1" replace="true" selection="706 0" stamp="1597108409470" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructor&apos; from expression &apos;clazz1.getConstructor(String.class,Integer.class)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;constructor&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor2()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz1.getConstructor(String.class,Integer.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;constructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="constructor" replace="true" selection="881 0" stamp="1597108625382" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;constructor.newInstance(&quot;张三&quot;,18)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructor2()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.newInstance(&quot;张三&quot;,18)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="newInstance" replace="true" selection="1027 0" stamp="1597108681142" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructors&apos; from expression &apos;clazz1.getConstructors()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;constructors&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Constructor.ConstructorDemo.testConstructors()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz1.getConstructors()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;constructors&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Constructor{ConstructorDemo.java" name="constructors" replace="true" selection="2237 0" stamp="1597109319621" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Person.java&apos; to &apos;JAVASE/src/C_15_Field&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Destination element: &apos;JAVASE/src/C_15_Field&apos;&#x0D;&#x0A;- Original element: &apos;C_15_Constructor.Person.java&apos;" description="Copy compilation unit" destination="/src&lt;C_15_Field" element1="/src&lt;C_15_Constructor{Person.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1597109720610" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;Class.forName(&quot;C_15_Field.Person&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;C_15_Field.Person&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="clazz" replace="true" selection="265 0" stamp="1597109937018" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fields&apos; from expression &apos;clazz.getFields()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;fields&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getFields()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fields&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="fields" replace="true" selection="331 0" stamp="1597109964237" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;nameField&apos; from expression &apos;clazz.getField(&quot;name&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;nameField&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getField(&quot;name&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;nameField&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="nameField" replace="true" selection="494 0" stamp="1597110050770" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="newInstance" replace="true" selection="577 0" stamp="1597110147638" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="newInstance" replace="true" selection="801 0" stamp="1597110453475" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;object&apos; from expression &apos;nameField.get(p)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;object&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField()&apos;&#x0D;&#x0A;- Variable expression: &apos;nameField.get(p)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;object&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="object" replace="true" selection="1004 0" stamp="1597110617888" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredFields&apos; from expression &apos;clazz.getDeclaredFields()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;declaredFields&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Field.FieldDemo.testField1()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getDeclaredFields()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredFields&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Field{FieldDemo.java" name="declaredFields" replace="true" selection="1396 0" stamp="1597110958623" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Person.java&apos; to &apos;JAVASE/src/C_15_Method&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Destination element: &apos;JAVASE/src/C_15_Method&apos;&#x0D;&#x0A;- Original element: &apos;C_15_Field.Person.java&apos;" description="Copy compilation unit" destination="/src&lt;C_15_Method" element1="/src&lt;C_15_Field{Person.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1597111358541" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;Class.forName(&quot;C_15_Method.Person&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;C_15_Method.Person&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="clazz" replace="true" selection="327 0" stamp="1597111438545" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;clazz.getMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;methods&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethods()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="methods" replace="true" selection="405 0" stamp="1597111485951" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;clazz.getMethod(&quot;playBasketball&quot;,null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethod(&quot;playBasketball&quot;,null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="method" replace="true" selection="579 0" stamp="1597111667517" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="newInstance" replace="true" selection="661 0" stamp="1597111736549" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;Class.forName(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="clazz" replace="true" selection="941 0" stamp="1597112069115" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod1()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="newInstance" replace="true" selection="1017 0" stamp="1597112109737" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethod&apos; from expression &apos;clazz.getDeclaredMethod(&quot;playBasketball&quot;,null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethod&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Method.MethodDemo.testMethod1()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getDeclaredMethod(&quot;playBasketball&quot;,null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Method{MethodDemo.java" name="declaredMethod" replace="true" selection="1089 0" stamp="1597112260098" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Person.java&apos; to &apos;JAVASE/src/C_15_Example&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Destination element: &apos;JAVASE/src/C_15_Example&apos;&#x0D;&#x0A;- Original element: &apos;C_15_Method.Person.java&apos;" description="Copy compilation unit" destination="/src&lt;C_15_Example" element1="/src&lt;C_15_Method{Person.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1597112922067" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;Class.forName(&quot;C_15_Example.Person&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;Class.forName(&quot;C_15_Example.Person&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="clazz" replace="true" selection="356 0" stamp="1597113262724" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;setNamemethod&apos; from expression &apos;clazz.getMethod(&quot;name&quot;,java.lang.String.class)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;setNamemethod&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethod(&quot;name&quot;,java.lang.String.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;setNamemethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="setNamemethod" replace="true" selection="450 0" stamp="1597113418236" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.newInstance()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="newInstance" replace="true" selection="458 0" stamp="1597113447357" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;c&apos; from expression &apos;clazz.getConstructor(null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;c&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getConstructor(null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;c&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="c" replace="true" selection="465 0" stamp="1597113511059" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;p&apos; from expression &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;p&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;p&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="p" replace="true" selection="547 0" stamp="1597113530086" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;p&apos; from expression &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;p&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;p&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="p" replace="true" selection="568 0" stamp="1597113550955" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;p&apos; from expression &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;p&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;c.newInstance(null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;p&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="p" replace="true" selection="573 0" stamp="1597113564712" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;setAgemethod&apos; from expression &apos;clazz.getMethod(&quot;age&quot;,Integer.class)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;setAgemethod&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethod(&quot;age&quot;,Integer.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;setAgemethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="setAgemethod" replace="true" selection="743 0" stamp="1597113695059" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;m&apos; from expression &apos;clazz.getMethod(&quot;run&quot;,null)&apos;&#x0D;&#x0A;- Original project: &apos;JAVASE&apos;&#x0D;&#x0A;- Variable name: &apos;m&apos;&#x0D;&#x0A;- Destination method: &apos;C_15_Example.ReflectDemo.testReflect()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethod(&quot;run&quot;,null)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;m&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;C_15_Example{ReflectDemo.java" name="m" replace="true" selection="839 0" stamp="1597113817806" version="1.0"/>
</session>