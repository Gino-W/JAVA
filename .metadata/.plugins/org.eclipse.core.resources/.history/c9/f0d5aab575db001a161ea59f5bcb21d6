package C_15_Field;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;

import org.junit.Test;

/**
 * @author: Gino
 * @Data: 11 Aug 202009:34:30
 * @File_Name: FieldDemo.java
 * 
 */
public class FieldDemo {
	
	@Test
	public void testField() throws ClassNotFoundException, NoSuchFieldException, SecurityException, InstantiationException, IllegalAccessException, NoSuchMethodException, IllegalArgumentException, InvocationTargetException {
		
		//1.获得字节码文件
		Class clazz = Class.forName("C_15_Field.Person");
		Field[] fields = clazz.getFields();//获取所有的字段对象
		for(Field f : fields) {
			System.out.println(f.getName());
		}
		
		Field nameField = clazz.getField("name");//将name字段封装成一个对象
		Object obj = clazz.newInstance();//调用空的构造函数
		
		Constructor c = clazz.getConstructor(null);
		Object obj1 = c.newInstance(null);
		
		Person p = (Person)obj;
		nameField.set(p, "张三");
		System.out.println(p.name);
		
		Object object = nameField.get(p);//返回指定字段的值
		System.out.println(object);		
		
	}

}
